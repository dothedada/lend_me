CREATE TABLE IF NOT EXISTS authors (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  name VARCHAR(120),
  bio VARCHAR(1000),
  url VARCHAR(120)
);

CREATE TABLE IF NOT EXISTS editorials (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  name VARCHAR(120),
  url VARCHAR(120)
);

CREATE TABLE IF NOT EXISTS categories (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  category VARCHAR(120)
);

INSERT INTO categories (category) VALUES ('undefined');

CREATE TABLE IF NOT EXISTS books (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  title VARCHAR(120),
  author_id INTEGER REFERENCES authors(id),
  editorial_id INTEGER REFERENCES editorials(id),
  year SMALLINT,
  category_id INTEGER REFERENCES categories(id),
  sinopsys VARCHAR(1000),
  url VARCHAR(120),
  image VARCHAR(120)
);

CREATE TABLE IF NOT EXISTS users (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  name VARCHAR(120),
  email VARCHAR(120)
);

CREATE TABLE IF NOT EXISTS library (
  id INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  name VARCHAR(120),
  owner_id INTEGER REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS lends (
  book_id INTEGER NOT NULL REFERENCES books(id),
  from_id INTEGER NOT NULL REFERENCES library(id),
  to_id INTEGER NOT NULL REFERENCES users(id),
  date_taken TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
  date_returned TIMESTAMP WITH TIME ZONE,
  status VARCHAR(20) DEFAULT 'active' CHECK(status IN('active', 'returned'))
);

CREATE TABLE IF NOT EXISTS book_library (
  book_id INTEGER NOT NULL REFERENCES books(id),
  library_id INTEGER NOT NULL REFERENCES library(id),
  PRIMARY KEY (book_id, library_id)
);

CREATE TABLE IF NOT EXISTS user_library (
  user_id INTEGER NOT NULL REFERENCES users(id),
  library_id INTEGER NOT NULL REFERENCES library(id),
  PRIMARY KEY (user_id, library_id)
);

CREATE TABLE IF NOT EXISTS friends_usera_userb (
  usera_id INTEGER NOT NULL REFERENCES users(id),
  userb_id INTEGER NOT NULL REFERENCES users(id),
  PRIMARY KEY (usera_id, userb_id),
  CHECK(usera_id < userb_id)
)
